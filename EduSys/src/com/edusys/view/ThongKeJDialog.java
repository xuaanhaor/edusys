/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.view;

import com.edusys.dao.KhoaHocDAO;
import com.edusys.dao.ThongKeDAO;
import com.edusys.entity.KhoaHoc;
import com.edusys.helper.Auth;
import com.edusys.helper.MsgBox;
import com.lowagie.text.Document;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author THUAN
 */
public class ThongKeJDialog extends javax.swing.JDialog {

    /**
     * Creates new form ThongKeJDialog
     */
    public ThongKeJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        pnlBangDiem = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cboKhoaHoc = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBangDiem = new javax.swing.JTable();
        pnlXlxBD = new javax.swing.JPanel();
        lblExportExel = new javax.swing.JLabel();
        pnlPDFBD = new javax.swing.JPanel();
        lblExportPdf = new javax.swing.JLabel();
        pnlNguoiHoc = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        pnlXlxNH = new javax.swing.JPanel();
        lblExportExel1 = new javax.swing.JLabel();
        pnlPDFNH = new javax.swing.JPanel();
        lblExportPdf1 = new javax.swing.JLabel();
        pnlDCD = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDiemChuyenDe = new javax.swing.JTable();
        pnlXlxDCD = new javax.swing.JPanel();
        lblExportExel2 = new javax.swing.JLabel();
        pnlPDFDCD = new javax.swing.JPanel();
        lblExportPdf2 = new javax.swing.JLabel();
        pnlDoanhThu = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();
        pnlXlxDoanhThu = new javax.swing.JPanel();
        lblExportExel4 = new javax.swing.JLabel();
        pnlPDFDoanhThu = new javax.swing.JPanel();
        lblExportPdf3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TỔNG HỢP VÀ THỐNG KÊ");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 255));
        jLabel1.setText("TỔNG HỢP THỐNG KÊ");

        jLabel2.setText("KHOÁ HỌC");

        cboKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaHocActionPerformed(evt);
            }
        });

        tblBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MA NH", "HO VA TEN", "DIEM", "XEP LOAI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBangDiem.setRowHeight(22);
        jScrollPane1.setViewportView(tblBangDiem);
        if (tblBangDiem.getColumnModel().getColumnCount() > 0) {
            tblBangDiem.getColumnModel().getColumn(0).setHeaderValue("MA NH");
            tblBangDiem.getColumnModel().getColumn(1).setHeaderValue("HO VA TEN");
            tblBangDiem.getColumnModel().getColumn(2).setHeaderValue("DIEM");
            tblBangDiem.getColumnModel().getColumn(3).setHeaderValue("XEP LOAI");
        }

        pnlXlxBD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlXlxBDMouseClicked(evt);
            }
        });

        lblExportExel.setBackground(new java.awt.Color(255, 255, 255));
        lblExportExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/export.png"))); // NOI18N
        lblExportExel.setText("EXECELS");
        lblExportExel.setOpaque(true);

        javax.swing.GroupLayout pnlXlxBDLayout = new javax.swing.GroupLayout(pnlXlxBD);
        pnlXlxBD.setLayout(pnlXlxBDLayout);
        pnlXlxBDLayout.setHorizontalGroup(
            pnlXlxBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportExel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlXlxBDLayout.setVerticalGroup(
            pnlXlxBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlXlxBDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportExel))
        );

        pnlPDFBD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlPDFBDMouseClicked(evt);
            }
        });

        lblExportPdf.setBackground(new java.awt.Color(255, 255, 255));
        lblExportPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/pdf.png"))); // NOI18N
        lblExportPdf.setText("PDF");
        lblExportPdf.setOpaque(true);

        javax.swing.GroupLayout pnlPDFBDLayout = new javax.swing.GroupLayout(pnlPDFBD);
        pnlPDFBD.setLayout(pnlPDFBDLayout);
        pnlPDFBDLayout.setHorizontalGroup(
            pnlPDFBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPDFBDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportPdf, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlPDFBDLayout.setVerticalGroup(
            pnlPDFBDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportPdf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlBangDiemLayout = new javax.swing.GroupLayout(pnlBangDiem);
        pnlBangDiem.setLayout(pnlBangDiemLayout);
        pnlBangDiemLayout.setHorizontalGroup(
            pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(pnlBangDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBangDiemLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboKhoaHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlBangDiemLayout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(pnlXlxBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(pnlPDFBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlBangDiemLayout.setVerticalGroup(
            pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBangDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBangDiemLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pnlPDFBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBangDiemLayout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(pnlXlxBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );

        tabs.addTab("BẢNG ĐIỂM", pnlBangDiem);

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAM", "SO NGUOI HOC", "DK SOM NHAT", "DK MUON NHAT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.setRowHeight(22);
        jScrollPane3.setViewportView(tblNguoiHoc);

        pnlXlxNH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlXlxNHMouseClicked(evt);
            }
        });

        lblExportExel1.setBackground(new java.awt.Color(255, 255, 255));
        lblExportExel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/export.png"))); // NOI18N
        lblExportExel1.setText("EXECELS");
        lblExportExel1.setOpaque(true);

        javax.swing.GroupLayout pnlXlxNHLayout = new javax.swing.GroupLayout(pnlXlxNH);
        pnlXlxNH.setLayout(pnlXlxNHLayout);
        pnlXlxNHLayout.setHorizontalGroup(
            pnlXlxNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportExel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlXlxNHLayout.setVerticalGroup(
            pnlXlxNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlXlxNHLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportExel1))
        );

        pnlPDFNH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlPDFNHMouseClicked(evt);
            }
        });

        lblExportPdf1.setBackground(new java.awt.Color(255, 255, 255));
        lblExportPdf1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/pdf.png"))); // NOI18N
        lblExportPdf1.setText("PDF");
        lblExportPdf1.setOpaque(true);

        javax.swing.GroupLayout pnlPDFNHLayout = new javax.swing.GroupLayout(pnlPDFNH);
        pnlPDFNH.setLayout(pnlPDFNHLayout);
        pnlPDFNHLayout.setHorizontalGroup(
            pnlPDFNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPDFNHLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportPdf1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlPDFNHLayout.setVerticalGroup(
            pnlPDFNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportPdf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlNguoiHocLayout = new javax.swing.GroupLayout(pnlNguoiHoc);
        pnlNguoiHoc.setLayout(pnlNguoiHocLayout);
        pnlNguoiHocLayout.setHorizontalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNguoiHocLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlXlxNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(pnlPDFNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlNguoiHocLayout.setVerticalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoiHocLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPDFNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlXlxNH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        tabs.addTab("NGƯỜI HỌC", pnlNguoiHoc);

        tblDiemChuyenDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CHUYEN DE", "SO LUONG HV", "DIEM THAP NHAT", "DIEM CAO NHAT", "DIEM TRUNG BINH"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDiemChuyenDe);

        pnlXlxDCD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlXlxDCDMouseClicked(evt);
            }
        });

        lblExportExel2.setBackground(new java.awt.Color(255, 255, 255));
        lblExportExel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/export.png"))); // NOI18N
        lblExportExel2.setText("EXECELS");
        lblExportExel2.setOpaque(true);

        javax.swing.GroupLayout pnlXlxDCDLayout = new javax.swing.GroupLayout(pnlXlxDCD);
        pnlXlxDCD.setLayout(pnlXlxDCDLayout);
        pnlXlxDCDLayout.setHorizontalGroup(
            pnlXlxDCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportExel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlXlxDCDLayout.setVerticalGroup(
            pnlXlxDCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlXlxDCDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportExel2))
        );

        pnlPDFDCD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlPDFDCDMouseClicked(evt);
            }
        });

        lblExportPdf2.setBackground(new java.awt.Color(255, 255, 255));
        lblExportPdf2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/pdf.png"))); // NOI18N
        lblExportPdf2.setText("PDF");
        lblExportPdf2.setOpaque(true);

        javax.swing.GroupLayout pnlPDFDCDLayout = new javax.swing.GroupLayout(pnlPDFDCD);
        pnlPDFDCD.setLayout(pnlPDFDCDLayout);
        pnlPDFDCDLayout.setHorizontalGroup(
            pnlPDFDCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPDFDCDLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportPdf2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlPDFDCDLayout.setVerticalGroup(
            pnlPDFDCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportPdf2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlDCDLayout = new javax.swing.GroupLayout(pnlDCD);
        pnlDCD.setLayout(pnlDCDLayout);
        pnlDCDLayout.setHorizontalGroup(
            pnlDCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDCDLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlXlxDCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(pnlPDFDCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        pnlDCDLayout.setVerticalGroup(
            pnlDCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDCDLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPDFDCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlXlxDCD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 49, Short.MAX_VALUE))
        );

        tabs.addTab("ĐIỂM CHUYÊN ĐỀ", pnlDCD);

        jLabel3.setText("NĂM");

        cboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNamActionPerformed(evt);
            }
        });

        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CHUYEN DE", "SO KH", "SO HV", "DTHU", "HP.TN", "HP.CN", "HP.TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoanhThu.setRowHeight(22);
        jScrollPane4.setViewportView(tblDoanhThu);

        pnlXlxDoanhThu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlXlxDoanhThuMouseClicked(evt);
            }
        });

        lblExportExel4.setBackground(new java.awt.Color(255, 255, 255));
        lblExportExel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/export.png"))); // NOI18N
        lblExportExel4.setText("EXECELS");
        lblExportExel4.setOpaque(true);

        javax.swing.GroupLayout pnlXlxDoanhThuLayout = new javax.swing.GroupLayout(pnlXlxDoanhThu);
        pnlXlxDoanhThu.setLayout(pnlXlxDoanhThuLayout);
        pnlXlxDoanhThuLayout.setHorizontalGroup(
            pnlXlxDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportExel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlXlxDoanhThuLayout.setVerticalGroup(
            pnlXlxDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlXlxDoanhThuLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportExel4))
        );

        pnlPDFDoanhThu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlPDFDoanhThuMouseClicked(evt);
            }
        });

        lblExportPdf3.setBackground(new java.awt.Color(255, 255, 255));
        lblExportPdf3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hinh/pdf.png"))); // NOI18N
        lblExportPdf3.setText("PDF");
        lblExportPdf3.setOpaque(true);

        javax.swing.GroupLayout pnlPDFDoanhThuLayout = new javax.swing.GroupLayout(pnlPDFDoanhThu);
        pnlPDFDoanhThu.setLayout(pnlPDFDoanhThuLayout);
        pnlPDFDoanhThuLayout.setHorizontalGroup(
            pnlPDFDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPDFDoanhThuLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblExportPdf3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlPDFDoanhThuLayout.setVerticalGroup(
            pnlPDFDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblExportPdf3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlDoanhThuLayout = new javax.swing.GroupLayout(pnlDoanhThu);
        pnlDoanhThu.setLayout(pnlDoanhThuLayout);
        pnlDoanhThuLayout.setHorizontalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDoanhThuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDoanhThuLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboNam, 0, 580, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDoanhThuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlXlxDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(pnlPDFDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDoanhThuLayout.setVerticalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDoanhThuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPDFDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlXlxDoanhThu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        tabs.addTab("DOANH THU", pnlDoanhThu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabs.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaHocActionPerformed
        // TODO add your handling code here:
        this.fillTableBangDiem();

    }//GEN-LAST:event_cboKhoaHocActionPerformed

    private void cboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNamActionPerformed
        // TODO add your handling code here:
        this.fillTableDoanhThu();
    }//GEN-LAST:event_cboNamActionPerformed

    private void pnlXlxBDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlXlxBDMouseClicked
        // TODO add your handling code here:
        exportExcel_BD();
    }//GEN-LAST:event_pnlXlxBDMouseClicked

    private void pnlPDFBDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPDFBDMouseClicked
        // TODO add your handling code here:
        exportPDF_BD();
    }//GEN-LAST:event_pnlPDFBDMouseClicked

    private void pnlXlxNHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlXlxNHMouseClicked
        // TODO add your handling code here:
        exportExcel_NH();
    }//GEN-LAST:event_pnlXlxNHMouseClicked

    private void pnlPDFNHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPDFNHMouseClicked
        // TODO add your handling code here:
        exportPDF_NH();
    }//GEN-LAST:event_pnlPDFNHMouseClicked

    private void pnlXlxDCDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlXlxDCDMouseClicked
        // TODO add your handling code here:
        exportExcel_DiemChuyenDe();
    }//GEN-LAST:event_pnlXlxDCDMouseClicked

    private void pnlPDFDCDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPDFDCDMouseClicked
        // TODO add your handling code here:
        exportPDF_DiemChuyenDe();
    }//GEN-LAST:event_pnlPDFDCDMouseClicked

    private void pnlXlxDoanhThuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlXlxDoanhThuMouseClicked
        // TODO add your handling code here:
        exportExcel_DoanhThu();
    }//GEN-LAST:event_pnlXlxDoanhThuMouseClicked

    private void pnlPDFDoanhThuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPDFDoanhThuMouseClicked
        // TODO add your handling code here:
        exportPDF_DoanhThu();
    }//GEN-LAST:event_pnlPDFDoanhThuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ThongKeJDialog dialog = new ThongKeJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboKhoaHoc;
    private javax.swing.JComboBox cboNam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblExportExel;
    private javax.swing.JLabel lblExportExel1;
    private javax.swing.JLabel lblExportExel2;
    private javax.swing.JLabel lblExportExel4;
    private javax.swing.JLabel lblExportPdf;
    private javax.swing.JLabel lblExportPdf1;
    private javax.swing.JLabel lblExportPdf2;
    private javax.swing.JLabel lblExportPdf3;
    private javax.swing.JPanel pnlBangDiem;
    private javax.swing.JPanel pnlDCD;
    private javax.swing.JPanel pnlDoanhThu;
    private javax.swing.JPanel pnlNguoiHoc;
    private javax.swing.JPanel pnlPDFBD;
    private javax.swing.JPanel pnlPDFDCD;
    private javax.swing.JPanel pnlPDFDoanhThu;
    private javax.swing.JPanel pnlPDFNH;
    private javax.swing.JPanel pnlXlxBD;
    private javax.swing.JPanel pnlXlxDCD;
    private javax.swing.JPanel pnlXlxDoanhThu;
    private javax.swing.JPanel pnlXlxNH;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblBangDiem;
    private javax.swing.JTable tblDiemChuyenDe;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblNguoiHoc;
    // End of variables declaration//GEN-END:variables

    KhoaHocDAO khdao = new KhoaHocDAO();
    ThongKeDAO tkdao = new ThongKeDAO();

    // get xep loai dung de tinh diem trung binh
    String getXepLoai(double diem) {
        if (diem < 5) {
            return "Chưa đạt";
        }
        if (diem < 6.5) {
            return "Trung bình";
        }
        if (diem < 7.5) {
            return "Khá";
        }
        if (diem < 9) {
            return "Giỏi";
        }
        return "Xuất xắc";
    }

    private void init() {
        this.setLocationRelativeTo(null);
        this.fillComboBoxKhoaHoc();
        this.fillTableBangDiem();
        this.fillTableNguoiHoc();;
        this.fillTableDiemChuyenDe();
        this.fillComboBoxNam();
        this.fillTableDoanhThu();
        this.fillTableLuongNguoiHoc();
        // nếu là nhân viên thì xoá menu doanh thu
        this.selectTab(0);
        if (!Auth.isManager()) {
            tabs.remove(3);
        }

    }

    public void selectTab(int index) {
        tabs.setSelectedIndex(index);
    }

// menu_tab bang diem
    void fillTableNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblBangDiem.getModel();
        model.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        List<Object[]> list = tkdao.getBangDiem(kh.getMaKH());
        for (Object[] row : list) {
            double diem = (double) row[2];
            model.addRow(new Object[]{row[0], row[1], diem, getXepLoai(diem)});

        }
    }

    void fillComboBoxKhoaHoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        model.removeAllElements();
        List<KhoaHoc> list = khdao.selectAll();
        for (KhoaHoc kh : list) {
            model.addElement(kh);
        }
    }

    // menu_tab nguoi hoc
    void fillTableLuongNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getLuongNguoiHoc();
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void fillTableBangDiem() {
        DefaultTableModel model = (DefaultTableModel) tblBangDiem.getModel();
        model.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        List<Object[]> list = tkdao.getBangDiem(kh.getMaKH());
        for (Object[] row : list) {
            double diem = (double) row[2];
            model.addRow(new Object[]{row[0], row[1], diem, getXepLoai(diem)});
        }
    }
// Meunu_Diemchuyende

    void fillTableDiemChuyenDe() {
        DefaultTableModel model = (DefaultTableModel) tblDiemChuyenDe.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getDiemChuyenDe();
        for (Object[] row : list) {
            model.addRow(new Object[]{row[0], row[1], row[2], row[3], String.format("%.1f", row[4])});
        }
    }
// menu_tab doanh thu

    void fillComboBoxNam() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNam.getModel();
        model.removeAllElements();
        List<Integer> list = khdao.selectYears();
        for (Integer year : list) {
            model.addElement(year);
        }
        cboNam.setSelectedIndex(0);
    }

    void fillTableDoanhThu() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThu.getModel();
        model.setRowCount(0);
        int nam = (Integer) cboNam.getSelectedItem();
        List<Object[]> list = tkdao.getDoanhThu(nam);
        list.stream().forEach((row) -> {
            model.addRow(row);
//            model.addRow(new Object[]{row[0], row[1], row[2], row[3], row[4], row[5], row[6], String.format("%.lf", row[7])});
        });
    }
// export_BangDiem

    void exportExcel_BD() {
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.showSaveDialog(this);
            File saveFile = fileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet s = (Sheet) wb.createSheet("Bảng Điểm");
                Row rowcol = s.createRow(0);
                for (int i = 0; i < tblBangDiem.getColumnCount(); i++) {
                    Cell cell = rowcol.createCell(i);
                    cell.setCellValue(tblBangDiem.getColumnName(i));
                }
                for (int j = 0; j < tblBangDiem.getRowCount(); j++) {
                    Row row = s.createRow(j + 1);
                    for (int k = 0; k < tblBangDiem.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tblBangDiem.getValueAt(j, k) != null) {
                            cell.setCellValue(tblBangDiem.getValueAt(j, k).toString());
                        }
                    }
                }

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }

    void exportPDF_BD() {
        try {
            tblBangDiem.print();
        } catch (PrinterException ex) {
            MsgBox.alert(null, "Không thể in");
        }
    }
// export_NguoiHoc

    void exportExcel_NH() {
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.showSaveDialog(this);
            File saveFile = fileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet s = (Sheet) wb.createSheet("NguoiHoc");
                Row rowcol = s.createRow(0);
                for (int i = 0; i < tblNguoiHoc.getColumnCount(); i++) {
                    Cell cell = rowcol.createCell(i);
                    cell.setCellValue(tblNguoiHoc.getColumnName(i));
                }
                for (int j = 0; j < tblNguoiHoc.getRowCount(); j++) {
                    Row row = s.createRow(j + 1);
                    for (int k = 0; k < tblNguoiHoc.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tblNguoiHoc.getValueAt(j, k) != null) {
                            cell.setCellValue(tblNguoiHoc.getValueAt(j, k).toString());
                        }
                    }
                }

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }

    void exportPDF_NH() {
        try {
            tblNguoiHoc.print();
        } catch (PrinterException ex) {
            MsgBox.alert(null, "Không thể in");
        }
    }

    //Export_doanhThu
    void exportExcel_DoanhThu() {
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.showSaveDialog(this);
            File saveFile = fileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet s = (Sheet) wb.createSheet("DoanhThu");
                Row rowcol = s.createRow(0);
                for (int i = 0; i < tblDoanhThu.getColumnCount(); i++) {
                    Cell cell = rowcol.createCell(i);
                    cell.setCellValue(tblDoanhThu.getColumnName(i));
                }
                for (int j = 0; j < tblDoanhThu.getRowCount(); j++) {
                    Row row = s.createRow(j + 1);
                    for (int k = 0; k < tblDoanhThu.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tblDoanhThu.getValueAt(j, k) != null) {
                            cell.setCellValue(tblDoanhThu.getValueAt(j, k).toString());
                        }
                    }
                }

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }

    void exportPDF_DoanhThu() {
        try {
            tblDoanhThu.print();
        } catch (PrinterException ex) {
            MsgBox.alert(null, "Không thể in");
        }
    }

    // export_DiemChuyenDe
    void exportExcel_DiemChuyenDe() {
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.showSaveDialog(this);
            File saveFile = fileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet s = (Sheet) wb.createSheet("DiemChuyenDe");
                Row rowcol = s.createRow(0);
                for (int i = 0; i < tblDiemChuyenDe.getColumnCount(); i++) {
                    Cell cell = rowcol.createCell(i);
                    cell.setCellValue(tblDiemChuyenDe.getColumnName(i));
                }
                for (int j = 0; j < tblDiemChuyenDe.getRowCount(); j++) {
                    Row row = s.createRow(j + 1);
                    for (int k = 0; k < tblDiemChuyenDe.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tblDiemChuyenDe.getValueAt(j, k) != null) {
                            cell.setCellValue(tblDiemChuyenDe.getValueAt(j, k).toString());
                        }
                    }
                }

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }

    void exportPDF_DiemChuyenDe2() {
        String path = "";
        JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = filechooser.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = filechooser.getSelectedFile().getPath();
        }
        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + ".pdf"));
            doc.open();
            PdfPTable tbl = new PdfPTable(4);
            //tiêu đề pdf
            tbl.addCell("CHUYENDE");
            tbl.addCell("SO LUONG HOC VIEN");
            tbl.addCell("DIEM THAP NHAT ");
            tbl.addCell("DIEM CAO NHAT");
            tbl.addCell("DIEM TRUNG BINH");

            for (int i = 0; i < tblDiemChuyenDe.getRowCount(); i++) {
                String cd = tblDiemChuyenDe.getValueAt(i, 0).toString();
                String slHV = tblDiemChuyenDe.getValueAt(i, 1).toString();
                String DiemMin = tblDiemChuyenDe.getValueAt(i, 2).toString();
                String DiemMax = tblDiemChuyenDe.getValueAt(i, 3).toString();
                String DiemAvg = tblDiemChuyenDe.getValueAt(i, 4).toString();

                tbl.addCell(cd);
                tbl.addCell(slHV);
                tbl.addCell(DiemMin);
                tbl.addCell(DiemMax);
                tbl.addCell(DiemAvg);

            }
            doc.add(tbl);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        doc.close();

    }

    void exportPDF_DiemChuyenDe() {
        try {
            tblDiemChuyenDe.print();
        } catch (PrinterException ex) {
            MsgBox.alert(null, "Không thể in");
        }
    }

    private void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

}
